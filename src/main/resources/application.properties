# ==============================================================
# = Data Source
# ==============================================================
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/library?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=library
spring.datasource.password=library

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto=none

# ==============================================================
# = Initialize the database using data.sql script
# = Use it with spring.jpa.hibernate.ddl-auto=none ONLY!
# ==============================================================
#spring.datasource.initialization-mode=always

# ==============================================================
# = Logging
# ==============================================================
#logging.level.root=ERROR
#logging.level.sql=DEBUG
#logging.level.org.springframework.security=TRACE
#logging.path=./
#logging.file=library.log

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, true from user where email=?
spring.queries.roles-query=select u.email, r.name from user u inner join user_role ur on(u.id=ur.user_id) inner join role r on(ur.role_id=r.id) where u.email=?

